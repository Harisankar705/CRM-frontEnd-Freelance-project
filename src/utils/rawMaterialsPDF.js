import { jsPDF } from 'jspdf';
import 'jspdf-autotable';
import axiosInstance from '../configs/axiosInstance';
export async function generateMaterialsReport(row) {
  try {
    const currentStockId = row._id;

    const response = await axiosInstance.get(`/current-stock/${currentStockId}/pdf-data`);
    console.log('pdfff....ing',response.data);
    const pdfData = response.data.pdfData;
    const doc = new jsPDF();

    // Add custom font
    doc.addFont('Roboto-Black.ttf', 'Roboto', 'bold');
    doc.setFont('Roboto', 'bold');

    // Report Title
    doc.setFontSize(18);
    doc.setFont('Times', 'bold');
    doc.text('Raw Materials Traceability Report', 105, 20, null, null, 'center');

    // Current Date and Time
    const currentDate = new Date().toLocaleString('en-US', {
      weekday: 'long',
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
      second: '2-digit',
      hour12: true,
    });

    // Fetching Admin Data
    const adminData = JSON.parse(localStorage.getItem('admin'));
    const userName = adminData?.userName || 'Unknown User';

    // Report Metadata
    doc.setFontSize(12);

    // Date of Report Generation
    doc.setFont('Times', 'bold');
    doc.text('Date of Report Generation:', 20, 40);
    doc.setFont('helvetica', 'normal');
    doc.text(currentDate, 70, 40);

    // Plant Name
    doc.setFont('Times', 'bold');
    doc.text('Plant Name:', 20, 50);
    doc.setFont('helvetica', 'normal');
    doc.text('Plant Name Placeholder', 50, 50);

    // Generated By
    doc.setFont('Times', 'bold');
    doc.text('Generated By:', 20, 60);
    doc.setFont('helvetica', 'normal');
    doc.text(userName, 50, 60);

    // Raw Materials Section Header
    doc.setFontSize(14);
    doc.setFont('helvetica', 'bold');
    doc.text('Raw Materials', 20, 90);

    // Raw Materials Description
    doc.setFont('Times', 'bold');
    doc.setFontSize(12);
    doc.text(
      'The raw materials used in production are listed below with their unique identifiers and quantities:',
      20,
      100
    );

    // Table Data Preparation
    const sanitizedData = [
      row.materialName || 'N/A',
      row.batchNumber || 'N/A',
      row.quantityReceived || 'N/A',
      row.quantityUsed || 'N/A',
      row.vendorId || 'N/A',
      row.vendorName || 'N/A',
      row.dateRecieved
        ? new Date(row.dateRecieved).toLocaleDateString('en-GB') // Formats to 'dd/mm/yyyy'
        : 'N/A', // Fallback for missing or invalid date
    ];

    // Raw Materials Table
    doc.autoTable({
      startY: 110,
      head: [
        [
          'Material Name',
          'Batch Number',
          'Quantity Received',
          'Quantity Used',
          'Vendor ID',
          'Vendor Name',
          'Date of Receipt',
        ],
      ],
      body: [sanitizedData],
      theme: 'grid',
      headStyles: { fillColor: [41, 128, 185] },
      margin: { left: 20, right: 20 },
    });

    const nextY = doc.lastAutoTable.finalY + 10;

    doc.setFontSize(14);
    doc.setFont('helvetica', 'bold');
    doc.text('Vendor Information', 20, nextY);

    doc.setFontSize(12);
    doc.setFont('Times', 'bold');
    doc.text('The vendors supplying the raw materials are detailed below:', 20, nextY + 10);

    const vendorYStart = nextY + 20;
    let vendorY = vendorYStart;

    doc.setFontSize(12);
    doc.setFont('Times', 'bold');
    doc.text(`Vendor ID:`, 20, vendorY + 10);
    doc.setFont('helvetica', 'normal');
    doc.text(`${pdfData?.vendor?.vendorId}` || 'N/A', 60, vendorY + 10);

    doc.setFont('Times', 'bold');
    doc.text(`Vendor Name:`, 20, vendorY + 20);
    doc.setFont('helvetica', 'normal');
    doc.text(`${pdfData?.vendor?.vendorName}` || 'N/A', 60, vendorY + 20);

    doc.setFont('Times', 'bold');
    doc.text(`Contact Information:`, 20, vendorY + 30);
    doc.setFont('helvetica', 'normal');
    doc.text(
      `${pdfData?.vendor?.contactName || 'N/A'} ${pdfData?.vendor?.contactPersonDetails
        || 'N/A'}`, 
      60, 
      vendorY + 30
    );
    

    doc.setFont('Times', 'bold');
    doc.text(`Location:`, 20, vendorY + 40);
    doc.setFont('helvetica', 'normal');
    doc.text(`${pdfData?.vendor?.address}` || 'N/A', 60, vendorY + 40);

    // Add some spacing after Vendor Information
    const storageYStart = vendorY + 60;

    // Storage Information
    doc.setFontSize(14);
    doc.setFont('helvetica', 'bold');
    doc.text('Storage Information', 20, storageYStart);

    doc.setFontSize(12);
    doc.setFont('Times', 'bold');
    doc.text('Details about the storage of raw materials:', 20, storageYStart + 10);

    const storageDetailsY = storageYStart + 20;

    doc.setFont('Times', 'bold');
    doc.text(`Material Name:`, 20, storageDetailsY);
    doc.setFont('helvetica', 'normal');
    doc.text('Pepper' || 'N/A', 70, storageDetailsY);

    doc.setFont('Times', 'bold');
    doc.text(`Batch Number:`, 20, storageDetailsY + 10);
    doc.setFont('helvetica', 'normal');
    doc.text('FRN/RM/001' || 'N/A', 70, storageDetailsY + 10);

    doc.setFont('Times', 'bold');
    doc.text(`Storage Location:`, 20, storageDetailsY + 20);
    doc.setFont('helvetica', 'normal');
    doc.text('Store Room A' || 'N/A', 70, storageDetailsY + 20);

    doc.setFont('Times', 'bold');
    doc.text(`Storage ID:`, 20, storageDetailsY + 30);
    doc.setFont('helvetica', 'normal');
    doc.text('' || 'N/A', 70, storageDetailsY + 30);

    doc.setFont('Times', 'bold');
    doc.text(`Stored Quantity:`, 20, storageDetailsY + 40);
    doc.setFont('helvetica', 'normal');
    doc.text('N/A' || 'N/A', 70, storageDetailsY + 40);

    doc.setFont('Times', 'bold');
    doc.text(`Date Stored:`, 20, storageDetailsY + 50);
    doc.setFont('helvetica', 'normal');
    doc.text('N/A' || 'N/A', 70, storageDetailsY + 50);

    doc.setFont('Times', 'bold');
    doc.text(`Shelf Life:`, 20, storageDetailsY + 60);
    doc.setFont('helvetica', 'normal');
    doc.text('' || 'N/A', 70, storageDetailsY + 60);

    // Add a new page for Production Details
    doc.addPage();

    // Set starting Y position for the new page
    const productionYStart = 20;

    // Production Details Section Title
    doc.setFontSize(14);
    doc.setFont('helvetica', 'bold');
    doc.text('Production Details', 20, productionYStart);

    doc.setFontSize(12);
    doc.setFont('Times', 'bold');
    doc.text(
      'Details of how raw materials were utilized during the production process:',
      20,
      productionYStart + 10
    );

    const productionDetailsY = productionYStart + 20;

    // Production Details Content
    doc.setFont('Times', 'bold');
    doc.text(`Material Name:`, 20, productionDetailsY);
    doc.setFont('helvetica', 'normal');
    doc.text('Material XYZ' || 'N/A', 80, productionDetailsY);

    doc.setFont('Times', 'bold');
    doc.text(`Batch Number:`, 20, productionDetailsY + 10);
    doc.setFont('helvetica', 'normal');
    doc.text('B12345' || 'N/A', 80, productionDetailsY + 10);

    doc.setFont('Times', 'bold');
    doc.text(`Production Order Number:`, 20, productionDetailsY + 20);
    doc.setFont('helvetica', 'normal');
    doc.text('PON56789' || 'N/A', 80, productionDetailsY + 20);

    doc.setFont('Times', 'bold');
    doc.text(`Used in Finished Product Batch:`, 20, productionDetailsY + 30);
    doc.setFont('helvetica', 'normal');
    doc.text('FPB90876' || 'N/A', 80, productionDetailsY + 30);

    doc.setFont('Times', 'bold');
    doc.text(`Quantity Used:`, 20, productionDetailsY + 40);
    doc.setFont('helvetica', 'normal');
    doc.text('500 KG' || 'N/A', 80, productionDetailsY + 40);

    doc.setFont('Times', 'bold');
    doc.text(`Date Used:`, 20, productionDetailsY + 50);
    doc.setFont('helvetica', 'normal');
    doc.text('2024-11-28' || 'N/A', 80, productionDetailsY + 50);

    doc.setFont('Times', 'bold');
    doc.text(`Plant Name:`, 20, productionDetailsY + 60);
    doc.setFont('helvetica', 'normal');
    doc.text('Main Plant' || 'N/A', 80, productionDetailsY + 60);

    doc.setFont('Times', 'bold');
    doc.text(`Operator Responsible:`, 20, productionDetailsY + 70);
    doc.setFont('helvetica', 'normal');
    doc.text('N/A' || 'N/A', 80, productionDetailsY + 70);

    doc.save('Raw_Materials_Report.pdf');
  } catch (error) {
    console.error('Error generating PDF:', error.message);
  }
}
